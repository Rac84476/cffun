composition

import Fugue.AWS as AWS
import Fugue.AWS.AutoScaling as AutoScaling
import Fugue.AWS.DynamoDB as DynamoDB
import Fugue.AWS.EC2 as EC2
import Fugue.AWS.ELB as ELB
import Fugue.AWS.IAM as IAM


############################################################
# Region
#   From local AWS setting: us-west-2
############################################################
region: AWS.Us-west-2


############################################################
# AutoScalingGroup
#   Generated from AWS resource: DemoApp-asge6aa3504dc2846b5b391e6ab0903e151dba0b098dc26522fa49955c0aa1ab91a-1W62FKBHD8NFC
############################################################
autoscaling-autoscalinggroup-1: AutoScaling.AutoScalingGroup.new {
  defaultCooldown: 300,
  enabledMetrics: [
    AutoScaling.GroupTotalInstances,
    AutoScaling.GroupInServiceInstances,
  ],
  healthCheckGracePeriod: 0,
  healthCheckType: AutoScaling.Ec2,
  launchConfiguration: autoscaling-launchconfiguration-1,
  loadBalancers: [
    elb-loadbalancer-1,
  ],
  maxSize: 4,
  minSize: 4,
  name: "DemoApp-asge6aa3504dc2846b5b391e6ab0903e151dba0b098dc26522fa49955c0aa1ab91a-1W62FKBHD8NFC",
  newInstancesProtectedFromScaleIn: False,
  resourceId: "arn:aws:autoscaling:us-west-2:225195660222:autoScalingGroup:9a487f15-6603-4882-a6c4-1d11361cb503:autoScalingGroupName/DemoApp-asge6aa3504dc2846b5b391e6ab0903e151dba0b098dc26522fa49955c0aa1ab91a-1W62FKBHD8NFC",
  subnets: [
    ec2-subnet-1,
    ec2-subnet-2,
  ],
  tags: [
    AWS.tag("Application", "Fugue Demo App"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("Name", "demo-app-asg"),
    AWS.tag("aws:cloudformation:logical-id", "asge6aa3504dc2846b5b391e6ab0903e151dba0b098dc26522fa49955c0aa1ab91a"),
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
  ],
  terminationPolicies: [
    AutoScaling.ClosestToNextInstanceHour,
  ],
}


############################################################
# Launch Configuration
#   Generated from AWS resource: DemoApp-lce6aa3504dc2846b5b391e6ab0903e151a4f425805c85521aa281c46e70ddb472-1IV09JROOX3BX
############################################################
autoscaling-launchconfiguration-1: AutoScaling.LaunchConfiguration.new {
  associatePublicIpAddress: True,
  ebsOptimized: False,
  iamInstanceProfile: iam-instanceprofile-1,
  image: "ami-b7b366d7",
  instanceMonitoring: True,
  instanceType: EC2.T2_micro,
  name: "DemoApp-lce6aa3504dc2846b5b391e6ab0903e151a4f425805c85521aa281c46e70ddb472-1IV09JROOX3BX",
  resourceId: "DemoApp-lce6aa3504dc2846b5b391e6ab0903e151a4f425805c85521aa281c46e70ddb472-1IV09JROOX3BX",
  securityGroups: [
    ec2-securitygroup-2,
  ],
}


############################################################
# Table
#   Generated from AWS resource: demo-app-table
############################################################
dynamodb-table-1: DynamoDB.Table.new {
  attributes: {
    "PropertyName": DynamoDB.S,
  },
  name: "demo-app-table",
  provisionedThroughput: {
    read: 10,
    write: 10,
  },
  region: region,
  resourceId: "arn:aws:dynamodb:us-west-2:225195660222:table/demo-app-table",
  schema: {
    "PropertyName": DynamoDB.HASH,
  },
}


############################################################
# DHCP Options
#   Generated from AWS resource: dopt-f10d4f88
############################################################
ec2-dhcpoptions-1: EC2.DhcpOptions.new {
  domainName: "us-west-2.compute.internal",
  domainNameServers: [
    "AmazonProvidedDNS",
  ],
  region: region,
  resourceId: "dopt-f10d4f88",
  tags: [
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
    AWS.tag("Name", "demo-app-network"),
    AWS.tag("aws:cloudformation:logical-id", "doptb3ce8fca"),
    AWS.tag("Migrate", "Fugue"),
  ],
}


############################################################
# InternetGateway
#   Generated from AWS resource: igw-327b0c54
############################################################
ec2-internetgateway-1: EC2.InternetGateway.new {
  region: region,
  resourceId: "igw-327b0c54",
  tags: [
    AWS.tag("Name", "demo-app-network-IGW"),
    AWS.tag("aws:cloudformation:logical-id", "igw842a5ee2"),
    AWS.tag("network", "public"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
  ],
  vpc: ec2-vpc-1,
}


############################################################
# Route Table
#   Generated from AWS resource: rtb-d6c997ae
############################################################
ec2-routetable-1: EC2.RouteTable.new {
  associations: [
    ec2-subnet-1,
    ec2-subnet-2,
  ],
  resourceId: "rtb-d6c997ae",
  routes: [
    EC2.Route.new {
      destinationCidrBlock: "0.0.0.0/0",
      target: EC2.GatewayTarget(ec2-internetgateway-1),
    },
  ],
  tags: [
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
    AWS.tag("aws:cloudformation:logical-id", "rtb04306c7c"),
    AWS.tag("network", "public"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("Name", "demo-app-network-PUBLIC-RT"),
  ],
  vpc: ec2-vpc-1,
}


############################################################
# Security Group
#   Generated from AWS resource: sg-c0e882be
############################################################
ec2-securitygroup-1: EC2.SecurityGroup.new {
  description: "Allow http/s traffic from the Internet",
  ipPermissions: [
    EC2.IpPermission.new {
      fromPort: 80,
      ipProtocol: "tcp",
      target: EC2.IpPermission.Target.all,
      toPort: 80,
    },
    EC2.IpPermission.new {
      fromPort: 443,
      ipProtocol: "tcp",
      target: EC2.IpPermission.Target.all,
      toPort: 443,
    },
  ],
  ipPermissionsEgress: [
    EC2.IpPermission.new {
      fromPort: 0,
      ipProtocol: "-1",
      target: EC2.IpPermission.Target.all,
      toPort: 0,
    },
  ],
  resourceId: "sg-c0e882be",
  tags: [
    AWS.tag("Application", "Fugue Demo App"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("aws:cloudformation:logical-id", "sge6aa3504dc2846b5b391e6ab0903e1515c6b16af967a54eb91662ddb7574d4de"),
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
    AWS.tag("Name", "demo-app-elb-sg"),
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
  ],
  vpc: ec2-vpc-1,
}


############################################################
# Security Group
#   Generated from AWS resource: sg-c3e882bd
############################################################
ec2-securitygroup-2: EC2.SecurityGroup.new {
  description: "Allow http traffic from the ELB SG",
  ipPermissions: [
    EC2.IpPermission.new {
      fromPort: 3000,
      ipProtocol: "tcp",
      target: EC2.IpPermission.Target.securityGroups([
          ec2-securitygroup-1,
        ]),
      toPort: 3000,
    },
  ],
  ipPermissionsEgress: [
    EC2.IpPermission.new {
      fromPort: 0,
      ipProtocol: "-1",
      target: EC2.IpPermission.Target.all,
      toPort: 0,
    },
  ],
  resourceId: "sg-c3e882bd",
  tags: [
    AWS.tag("Name", "demo-app-web-sg"),
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("aws:cloudformation:logical-id", "sge6aa3504dc2846b5b391e6ab0903e151bf1dbac48a11578e921f51ba56cb9e3a"),
    AWS.tag("Application", "Fugue Demo App"),
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
  ],
  vpc: ec2-vpc-1,
}


############################################################
# Subnet
#   Generated from AWS resource: subnet-e2b4339b
############################################################
ec2-subnet-1: EC2.Subnet.new {
  availabilityZone: AWS.A,
  cidrBlock: "10.0.1.0/24",
  defaultForAz: False,
  mapPublicIpOnLaunch: False,
  resourceId: "subnet-e2b4339b",
  tags: [
    AWS.tag("aws:cloudformation:logical-id", "subnetc223a6bb"),
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
    AWS.tag("network", "public"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("Name", "demo-app-network-PUBLIC-SN-A"),
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
  ],
  vpc: ec2-vpc-1,
}


############################################################
# Subnet
#   Generated from AWS resource: subnet-69b21322
############################################################
ec2-subnet-2: EC2.Subnet.new {
  availabilityZone: AWS.B,
  cidrBlock: "10.0.2.0/24",
  defaultForAz: False,
  mapPublicIpOnLaunch: False,
  resourceId: "subnet-69b21322",
  tags: [
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("Name", "demo-app-network-PUBLIC-SN-B"),
    AWS.tag("aws:cloudformation:logical-id", "subnet3f58ff74"),
    AWS.tag("network", "public"),
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
  ],
  vpc: ec2-vpc-1,
}


############################################################
# VPC
#   Generated from AWS resource: vpc-c4045ebd
############################################################
ec2-vpc-1: EC2.Vpc.new {
  cidrBlock: "10.0.0.0/16",
  dhcpOptions: ec2-dhcpoptions-1,
  enableDnsHostnames: False,
  enableDnsSupport: True,
  instanceTenancy: EC2.DefaultTenancy,
  region: region,
  resourceId: "vpc-c4045ebd",
  tags: [
    AWS.tag("aws:cloudformation:logical-id", "vpc962179ef"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
    AWS.tag("Name", "demo-app-network"),
  ],
}


############################################################
# Classic LoadBalancer
#   Generated from AWS resource: DemoApp-elbdemoapp-8R954W7PNMGN
############################################################
elb-loadbalancer-1: ELB.LoadBalancer.new {
  crossZone: False,
  healthCheck: ELB.HealthCheck.new {
    healthyThreshold: 3,
    interval: 15,
    port: 3000,
    protocol: ELB.TCP,
    timeout: 3,
    unhealthyThreshold: 3,
  },
  idleTimeout: 60,
  instances: [
    EC2.Instance.external("i-022f4babb9d11c0c4", region),
    EC2.Instance.external("i-06f695bfeeb80713a", region),
    EC2.Instance.external("i-084a957a6b99d2c7e", region),
    EC2.Instance.external("i-0964199a6594e8768", region),
  ],
  listeners: [
    ELB.Listener.new {
      instancePort: 3000,
      instanceProtocol: ELB.HTTP,
      loadBalancerPort: 80,
      protocol: ELB.HTTP,
    },
  ],
  loadBalancerName: "DemoApp-elbdemoapp-8R954W7PNMGN",
  resourceId: "DemoApp-elbdemoapp-8R954W7PNMGN",
  scheme: ELB.InternetFacing,
  securityGroups: [
    ec2-securitygroup-1,
  ],
  subnets: [
    ec2-subnet-2,
    ec2-subnet-1,
  ],
  tags: [
    AWS.tag("aws:cloudformation:stack-name", "DemoApp"),
    AWS.tag("aws:cloudformation:logical-id", "elbdemoappelb"),
    AWS.tag("aws:cloudformation:stack-id", "arn:aws:cloudformation:us-west-2:225195660222:stack/DemoApp/fba0b1b0-44d7-11e8-be23-50a68d01a629"),
    AWS.tag("Application", "Fugue Demo App"),
    AWS.tag("Migrate", "Fugue"),
    AWS.tag("Name", "demo-app-elb"),
  ],
}


############################################################
# IAM Instance Profile
#   Generated from AWS resource: DemoApp-DemoAppInstanceProfile-17BZ3L55OQ8Y2
############################################################
iam-instanceprofile-1: IAM.InstanceProfile.new {
  instanceProfileName: "DemoApp-DemoAppInstanceProfile-17BZ3L55OQ8Y2",
  path: "/",
  resourceId: "arn:aws:iam::225195660222:instance-profile/DemoApp-DemoAppInstanceProfile-17BZ3L55OQ8Y2",
  roles: [
    iam-role-1,
  ],
}


############################################################
# IAM Role
#   Generated from AWS resource: AROAIZPGWMNV7X2JGIIUQ
############################################################
iam-role-1: IAM.Role.new {
  assumeRolePolicyDocument: '{"Statement": [{"Action": "sts:AssumeRole", "Effect": "Allow", "Principal": {"Service": "ec2.amazonaws.com"}}], "Version": "2012-10-17"}',
  path: "/",
  resourceId: "arn:aws:iam::225195660222:role/DemoApp-DemoAppRole-1MNOSSNEDAYB5",
  roleName: "DemoApp-DemoAppRole-1MNOSSNEDAYB5",
  rolePolicies: [
    IAM.Policy.new {
      policyDocument: '{"Statement": [{"Action": ["dynamodb:*"], "Effect": "Allow", "Resource": "*"}]}',
      policyName: "DemoAppPolicy",
    },
  ],
}


